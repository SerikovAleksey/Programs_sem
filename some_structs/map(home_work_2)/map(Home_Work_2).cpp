// 1. Итераторы - это такие объекты, как указатели для массива, только для структур данных.
// Они нужны, чтобы итерироваться по структуре.
//2. Для бинарных деревьев: элементы лежат в разных местах
//                            занимает дополнительную память на указатели
//                            поиск элемента O(log N)
//                            можно быстро добавлять и удалять элементы O(log N)

//2.1 Red - black tree: Узел - либо красный, либо чёрный и имеет двух потомков;
//                      Корень — чёрный.
//                      Все листья — чёрные и не содержат данных.
//                      Два потомка каждого красного узла — чёрные.
//                      Любой простой путь от узла-предка до листового узла-потомка,
//                      содержит одинаковое число чёрных узлов (иначе балансировка).
//2.2 AVL tree (сбалансированное по высоте двоичное дерево поиска) : для каждой его вершины
//              высота её двух поддеревья различается не более чем на 1.


#include <iostream>
#include <map>

std::ostream& operator<<(std::ostream& out, std::map<int, int>& output) {
    for (auto i = 0u; i < output.size(); i++){
        if (output[i] != 0) {
            out << "Amount " << i << " in map" << ": "<< output[i] << "\n";
        }
    }
    return out;
}


int main() {
    std::map<int, int> numbers;
    int N;
    std::cin >> N;
    for (auto i = 0u; i < N; i++) {
        int num;
        std::cin >> num;
        numbers[num]++;
    }
    std::cout << numbers;
}

